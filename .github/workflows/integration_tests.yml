#
# @file .github/workflows/integration_tests.yml
#
# Copyright (c) 2022 OPTIMETA project
# Copyright (c) 2022 Daniel NÃ¼st
# Distributed under the GNU GPL v3. For full terms see the file LICENSE.
#
# Based on https://github.com/RBoelter/twitterBlock/blob/stable-3_2_1/.github/workflows/twitter_ci_tests.yml
#
name: OPTIMETA Geoplugin CI Test
on:
  push:
    branches:
      - main
jobs:
  full_ci:
    name: ${{ matrix.pkp-application }}(BRANCH=${{ matrix.pkp-branch }} ;PHP=${{ matrix.php-versions }}; DB=${{ matrix.dbs }})
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        php-versions: [
            #'7.3',
            "7.4",
            #'8.0'
          ]
        dbs: [
            #'pgsql',
            "mysql",
          ]
        pkp-application: ["ojs"]
        #'omp',
        #'ops'
        pkp-branch: [
            'stable-3_2_1',
            "stable-3_3_0",
          ]
    services:
      mysql:
        image: bitnami/mysql:5.7
        env:
          MYSQL_ROOT_PASSWORD: root
          MYSQL_USER: ojs-ci
          MYSQL_PASSWORD: ojs-ci
          MYSQL_DATABASE: ojs-ci
          MYSQL_AUTHENTICATION_PLUGIN: mysql_native_password
        ports:
          - 3306:3306
        options: --health-cmd="mysqladmin ping" --health-interval=10s --health-timeout=5s --health-retries=5
      postgres:
        image: postgres:latest
        env:
          POSTGRES_USER: ojs-ci
          POSTGRES_PASSWORD: ojs-ci
          POSTGRES_DB: ojs-ci
        ports:
          - 5432:5432
        options: --health-cmd="pg_isready" --health-interval=10s --health-timeout=5s --health-retries=5
    env:
      CYPRESS_BASE_URL: http://127.0.0.1:8000
      CYPRESS_DBTYPE: ${{ matrix.dbs  == 'pgsql' && 'PostgreSQL' || 'MySQLi' }}
      CYPRESS_DBNAME: ojs-ci
      CYPRESS_DBUSERNAME: ojs-ci
      CYPRESS_DBPASSWORD: ojs-ci
      CYPRESS_DBHOST: 127.0.0.1
      CYPRESS_FILESDIR: files
    steps:
      - name: Setup PHP, extensions and composer
        uses: shivammathur/setup-php@v2
        with:
          php-version: ${{ matrix.php-versions }}
          extensions: mbstring, pgsql, mysql, mysqli, pdo_mysql, mysqlnd
        env:
          update: true
          COMPOSER_TOKEN: ${{ secrets.GITHUB_TOKEN }} # https://github.com/shivammathur/setup-php#composer-github-oauthenv:
          runner: self-hosted # https://github.com/shivammathur/setup-php/issues/494

      - name: Download PKP application
        run: |
          git clone -b ${{ matrix.pkp-branch }} https://github.com/pkp/${{ matrix.pkp-application }} ~/${{ matrix.pkp-application }}
          cd ~/${{ matrix.pkp-application }}
          git submodule update --init --recursive

      - name: Prepare tests
        run: |
          cd ~/${{ matrix.pkp-application }}
          cp config.TEMPLATE.inc.php config.inc.php
          sed -i -e "s/enable_cdn = On/enable_cdn = Off/" config.inc.php
          mkdir --parents files
          
      - name: Extra dependencies for act (using 'medium' image) to run cypress
        if: ${{ env.ACT }}
        run: |
          apt-get install -y libgtk2.0-0 libgtk-3-0 libgbm-dev libnotify-dev libgconf-2-4 libnss3 libxss1 libasound2 libxtst6 xauth xvfb

      - name: Install composer dependencies
        run: |
          cd ~/${{ matrix.pkp-application }}
          lib/pkp/tools/travis/install-composer-dependencies.sh

      # need to --force here to get old cypress version working, enable extensive logging with --loglevel verbose 
      - name: Install with npm and build app
        run: |
          cd ~/${{ matrix.pkp-application }}
          npm i g -npm && npm install --force && npm run build

      - name: Checkout plugin
        uses: actions/checkout@v2

      - name: Link plugin folder
        run: |
          cd ${{ github.workspace }}
          ln -s ${{ github.workspace }} ~/${{ matrix.pkp-application }}/plugins/generic/optimetaGeo

      - name: Checkout theme plugin
        run: |
          cd ${{ github.workspace }}
          git clone https://github.com/ifgi/optimetaGeoTheme

      - name: Link theme plugin folder
        run: |
          cd ${{ github.workspace }}
          ln -s ${{ github.workspace }}/optimetaGeoTheme ~/${{ matrix.pkp-application }}/plugins/themes/optimetaGeoTheme

      - name: Run server
        run: |
          cd ~/${{ matrix.pkp-application }}
          php -S 127.0.0.1:8000 -t . >& access.log &

      # re-use test setup from tested application
      - name: Create Content (${{ matrix.dbs }})
        run: |
          cd ~/${{ matrix.pkp-application }}
          npx cypress run --spec "cypress/tests/data/10-Installation.spec.js,cypress/tests/data/20-CreateContext.spec.js"

      # create content from tested application - OJS only so far!

      - name: Run tests for plugin
        run: |
          cd ~/${{ matrix.pkp-application }}
          npx cypress run --config integrationFolder=plugins/generic/optimetaGeo/cypress/tests

      - name: Show log
        if: ${{ failure() }}
        run: |
          cd ~/${{ matrix.pkp-application }}
          cat access.log

      - name: Upload screenshots
        uses: actions/upload-artifact@v2
        with:
          name: screenshots ${{ matrix.pkp-application }} $${{ matrix.php-versions }} $${{ matrix.dbs }}
          path: |
            ${{ github.workspace }}/${{ matrix.pkp-application }}/cypress/screenshots
